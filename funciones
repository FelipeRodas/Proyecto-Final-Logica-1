from datetime import date

"""
En este archivo se guardaran y se haran las funciones auxiliares 
que serviran como soporte para los metodos de las diferentes clases
"""

"""
FUNCION VERIFICAR_FECHA_I

Esta funcion recibe como parametros 3 enteros, que seran el dia, mes y año de 
inicio del torneo respectivamente y verificara que esos numeros ingresados 
sean validos el dia no puede ser menor al dia actual,o mayor la dia maximo de cada mes
"""
def Verificar_Inicio(dia, mes, año):
    diamax = 0
    hoy = date.today()
    
    # Año inválido
    if año < hoy.year:
        return 1
    
    # Mes inválido
    if mes < 1 or mes > 12:
        return 2
    
    # Días máximos del mes
    if (año % 4 == 0 and año % 100 != 0) or (año % 400 == 0):
        feb = 29
    else:
        feb = 28
    
    match mes:
        case 1 | 3 | 5 | 7 | 8 | 10 | 12:
            diamax = 31
        case 4 | 6 | 9 | 11:
            diamax = 30
        case 2:
            diamax = feb
    
    # Día inválido
    if dia < 1 or dia > diamax:
        return 3
    
    # Fecha anterior a hoy
    fecha_ingresada = date(año, mes, dia)
    if fecha_ingresada < hoy:
        return 4
    
    return 0
"""
FUNCION VERIFICAR_FECHA_F

Esta funcion recibe como parametros 6 parametros, el dia, mes y año correspondieste
a la fecha de inicio y el dia,mes y año  de finalizacion para verificar que la fecha de 
finalizacion sea una fecha valida y que la fecha de finalizacion no sea menor a la 
fecha de inicio
"""
     
def Verificar_Final(dia_i, mes_i, año_i, dia, mes, año):
    diamax = 0
    hoy = date.today()
    
    # Validar mes
    if mes < 1 or mes > 12:
        return 2
    
    # Determinar días máximos del mes
    if (año % 4 == 0 and año % 100 != 0) or (año % 400 == 0):
        feb = 29
    else:
        feb = 28
    
    match mes:
        case 1 | 3 | 5 | 7 | 8 | 10 | 12:
            diamax = 31
        case 4 | 6 | 9 | 11:
            diamax = 30
        case 2:
            diamax = feb
    
    # Validar día
    if dia < 1 or dia > diamax:
        return 3
    
    # Validar año
    if año < hoy.year:
        return 1
    
    # Crear fechas completas
    fecha_i = date(año_i, mes_i, dia_i)
    fecha_f = date(año, mes, dia)
    
    # Comparar con la fecha actual
    if fecha_f < hoy:
        return 1  # fecha final no puede ser anterior a hoy
    
    # Comparar fechas de inicio y fin
    if fecha_f < fecha_i:
        return 4  # fecha final menor que la inicial
    
    return 0


        
      
